{
  "version": 3,
  "sources": ["../../src/Index.generated.ts", "../../src/ui/Building/data.ts", "../../src/ui/Building/Index.ts", "../../src/ui/MapBuilder.ts", "../../src/ui/MapAction.ts", "../../src/ui/MapPanel.ts", "../../src/storage/local_storage.ts", "../../src/Index.ts", "../../src/Loading.generated.ts", "../../src/login/wx_login.ts", "../../src/Loading.ts"],
  "sourcesContent": ["/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\n\n\n/**\n * scenes/Index.ls\n */\nexport class IndexBase extends Laya.Scene {\n}\n\n", "export interface BuildingInfo {\n    name: string;\n    x: number;\n    y: number;\n    /** \u9ED8\u8BA4250 */\n    width?: number;\n    /** \u9ED8\u8BA4250 */\n    height?: number;\n}\n\nexport const buildingImage = \"resources/map/building.png\";\n\nexport const buildingInfos: BuildingInfo[] = [\n    { name: '\u897F\u9910\u5385', x: 0, y: 0 },\n    { name: '\u97F3\u54CD\u5E97', x: 250, y: 0 },\n    { name: 'ktv', x: 500, y: 0 },\n    { name: '\u9152\u5427', x: 750, y: 0 },\n    { name: '\u5496\u5561\u5E97', x: 0, y: 250 },\n    { name: '\u706B\u9505\u5E97', x: 250, y: 250 },\n    { name: '\u5065\u8EAB\u623F', x: 500, y: 250 },\n    { name: '\u7535\u5F71\u9662', x: 750, y: 250 },\n    { name: '\u6E38\u4E50\u56ED', x: 0, y: 500 },\n    { name: '\u8336\u9986',x: 250, y: 500 },\n    { name: '\u5DF4\u897F\u70E4\u8089', x: 500, y: 500 },\n    { name: '\u8C6A\u534E\u6D77\u9C9C\u996D\u5E97', x: 750, y: 500 },\n    { name: '\u8C6A\u534E\u897F\u9910\u5385', x: 0, y: 750 },\n    { name: '\u9C9C\u82B1\u5E97', x: 250, y: 750 },\n    { name: '\u533B\u9662', x: 500, y: 750 },\n    { name: '\u6D17\u8863\u673A', x: 750, y: 750 },\n];", "import { BuildingInfo, buildingImage, buildingInfos } from \"./data\";\nimport Texture = Laya.Texture;\nconst { regClass, property } = Laya;\n\n\n@regClass('cacf0a54-d6fe-4266-a93a-5adf7c756bfc', '../src/ui/Building/Index.ts')\nexport class Building extends Laya.Sprite {\n    \n    info: BuildingInfo;\n\n    constructor(x: number, y: number, width: number, height: number, scale: number = 1) {\n        super();\n        // 1.\u968F\u673A\u751F\u6210\u5EFA\u7B51\u4FE1\u606F\n        this.info = {\n            width: 250,\n            height: 250,\n            ...buildingInfos[this.random(0, buildingInfos.length - 1)]\n        };\n        \n        // 2.\u6839\u636E\u5EFA\u7B51\u6BD4\u4F8B\u8C03\u6574\u5B9E\u9645\u9AD8\u5EA6\n        const actualHeight = this.info.height / this.info.width * width;\n        const actualY = y + (height - actualHeight);\n        // 3.\u5BF9\u5EFA\u7B51\u8FDB\u884C\u7F29\u653E\n        if (scale === 1) {\n            this.pos(x, actualY);\n            this.size(width, actualHeight);\n        } else {\n            const scaleWidth = width * scale;\n            const scaleHeight = actualHeight * scale;\n            this.pos(x + (scaleWidth - width) / 2, y + (scaleHeight - actualHeight) / 2);\n            this.size(scaleWidth, scaleHeight);\n        }\n        // \u7ED8\u5236\n        this.draw();\n    }\n\n    draw() {\n        let texture: Texture = Texture.create(\n            Laya.loader.getRes(buildingImage),\n            this.info.x,\n            this.info.y,\n            this.info.width,\n            this.info.height\n        );\n        this.graphics.drawTexture(texture, 0, 0, this.width, this.height);\n    }\n\n    random(minNum: number, maxNum: number): number {\n        return Math.ceil(Math.random() * (maxNum - minNum) + minNum);\n    }\n}", "const RANDOM_CONFIG = {\n    DEEP_MIN: 8,\n    DEEP_MAX: 12,\n    EACH_DEEP_POINT_MIN: 1,\n    EACH_DEEP_POINT_MAX: 4,\n    POINT_ROAD_MIN: 1,\n    POINT_ROAD_MAX: 4,\n    ROAD_PRICE_MIN: 10,\n    ROAD_PRICE_MAX: 20,\n    EVENT_VALUE_MIN: 1,\n    EVENT_VALUE_MAX: 5,\n    EVENT_ROAD_MIN: 1,\n    EVENT_ROAD_MAX: 3,\n};\n\nconst PERCENT_CONFIG = {\n    EVENT: {\n        TOTAL: 10000,\n        TOTAL_PRICE_CHANGE: 5000,\n        ROAD_PRICE_CHANGE: 8999,\n        POSITION_CHANGE: 9999,\n        GAME_FAILED: 1,\n    },\n    EVENT_ROAD_PRICE: {\n        TOTAL: 10,\n        FREE: 2,\n    },\n};\n\nexport function createRandom(min: number, max: number) {\n    let rander = max - min + 1;\n    return Math.floor(Math.random() * rander) + min;\n}\n\nexport function mapBuilder() {\n    let roadNumber = 0,\n        deepNumber = createRandom(RANDOM_CONFIG.DEEP_MIN, RANDOM_CONFIG.DEEP_MAX);\n\n    let point: Array<number[]> = [[0]],\n        pointNumber = 1;\n    let map: Record<number, Record<number, any>> = {};\n    let mapV: Record<number, any> = [],\n        pointEvent: Record<number, any> = [],\n        topology: Record<number, any> = {},\n        mapLength = 0;\n    let maxCause = 0,\n        maxPath: number[] = [],\n        minCause = 0,\n        minPath: number[] = [];\n\n    //create point with deep number\n    function createPoint() {\n        for (let i = 0; i < deepNumber; i++) {\n            let random = createRandom(\n                i == 0\n                    ? RANDOM_CONFIG.EACH_DEEP_POINT_MAX - 2\n                    : RANDOM_CONFIG.EACH_DEEP_POINT_MIN,\n                RANDOM_CONFIG.EACH_DEEP_POINT_MAX\n            );\n            let r = [];\n            for (let j = 0; j < random; j++) {\n                pointNumber++;\n                r[j] = pointNumber - 1;\n            }\n            point.push([...r]);\n        }\n        pointNumber++;\n        point.push([pointNumber]);\n        deepNumber = point.length;\n    }\n    function createMap() {\n        for (let i = 0; i < deepNumber - 1; i++) {\n            for (let j = 0; j < point[i].length; j++) {\n                let start = point[i][j];\n                map[start] = {};\n                let limit = point[i + 1].length;\n                let limitArr = [...point[i + 1]];\n                if (i + 2 != deepNumber) {\n                    limit += point[i + 2].length;\n                    limitArr = [...limitArr, ...point[i + 2]];\n                }\n                let road = createRandom(\n                    RANDOM_CONFIG.POINT_ROAD_MIN,\n                    Math.min(limit - 1, RANDOM_CONFIG.POINT_ROAD_MAX)\n                );\n                for (var t = 0; t < road; t++) {\n                    var end = Math.floor(Math.random() * (limitArr.length - t));\n                    map[start][limitArr[end]] = createRandom(\n                        RANDOM_CONFIG.ROAD_PRICE_MIN,\n                        RANDOM_CONFIG.ROAD_PRICE_MAX\n                    );\n                    if (!topology[limitArr[end]]) topology[limitArr[end]] = 0;\n                    topology[limitArr[end]]++;\n                    mapV[mapLength] = {\n                        x: start,\n                        y: limitArr[end],\n                        z: map[start][limitArr[end]],\n                    };\n                    mapLength++;\n                    limitArr[end] = limitArr[limitArr.length - t - 1];\n                }\n            }\n        }\n        for (let i = 1; i < deepNumber - 1; i++) {\n            for (let j = 0; j < point[i].length; j++) {\n                if (!topology[point[i][j]]) {\n                    let limitArr = [...point[i - 1]];\n                    var start = Math.floor(Math.random() * (limitArr.length - t));\n                    let startP = limitArr[start];\n                    topology[point[i][j]]++;\n                    map[startP][point[i][j]] = createRandom(\n                        RANDOM_CONFIG.ROAD_PRICE_MIN,\n                        RANDOM_CONFIG.ROAD_PRICE_MAX\n                    );\n                    mapV[mapLength] = {\n                        x: startP,\n                        y: point[i][j],\n                        z: map[startP][point[i][j]],\n                    };\n                    mapLength++;\n                }\n            }\n        }\n    }\n    function createEvent() {\n        pointEvent[0] = {};\n        pointEvent[pointNumber - 1] = {};\n        for (let i = 1; i < pointNumber - 1; i++) {\n            let pecent = createRandom(1, PERCENT_CONFIG.EVENT.TOTAL);\n            let type =\n                pecent <= PERCENT_CONFIG.EVENT.TOTAL_PRICE_CHANGE\n                    ? 0\n                    : pecent <= PERCENT_CONFIG.EVENT.ROAD_PRICE_CHANGE\n                        ? 1\n                        : pecent <= PERCENT_CONFIG.EVENT.POSITION_CHANGE\n                            ? 2\n                            : 3;\n            if (type == 3) {\n                pointEvent[i] = { type: 3 };\n                continue;\n            }\n            if (type == 2) {\n                let target = createRandom(2, pointNumber - 1);\n                while (target == i) {\n                    target = createRandom(2, pointNumber - 1);\n                }\n                pointEvent[i] = { type: 2, target };\n                continue;\n            }\n            let event = createRandom(0, 1);\n            if (event == 0) {\n                let value = createRandom(\n                    RANDOM_CONFIG.EVENT_VALUE_MIN,\n                    RANDOM_CONFIG.EVENT_VALUE_MAX\n                );\n                pointEvent[i] = { type: 0, value: type == 0 ? value : value * -1 };\n            } else {\n                let value = createRandom(\n                    RANDOM_CONFIG.EVENT_VALUE_MIN,\n                    RANDOM_CONFIG.EVENT_VALUE_MAX\n                );\n                let path = createRandom(\n                    RANDOM_CONFIG.EVENT_ROAD_MIN,\n                    RANDOM_CONFIG.EVENT_ROAD_MAX\n                );\n                let isFree = createRandom(1, PERCENT_CONFIG.EVENT_ROAD_PRICE.TOTAL);\n                pointEvent[i] = {\n                    type: 1,\n                    value:\n                        isFree <= PERCENT_CONFIG.EVENT_ROAD_PRICE.FREE\n                            ? 0\n                            : type == 0\n                                ? value\n                                : value * -1,\n                    path,\n                };\n            }\n        }\n    }\n    let resultRecord = [];\n    function dps(pos: any, road: any[], value: number, event: any[]) {\n        let value_ = 0;\n        let newEvent = null;\n        if (pos == pointNumber) {\n            resultRecord.push({ value, road });\n            if (minCause == 0 || minCause > value) {\n                minCause = value;\n                minPath = [...road];\n            }\n            if (maxCause < value) {\n                maxCause = value;\n                maxPath = [...road];\n            }\n            return;\n        }\n        if (pointEvent[pos].type == 3) {\n            return;\n        }\n        if (pointEvent[pos].type == 2) {\n            if (!road.includes(pos)) {\n                dps(\n                    pointEvent[pos].target,\n                    [...road, pointEvent[pos].target],\n                    value,\n                    event\n                );\n                return;\n            }\n        }\n        if (pointEvent[pos].type == 1) {\n            newEvent = pointEvent[pos];\n        }\n        if (pointEvent[pos].type == 0) {\n            value_ = pointEvent[pos].value;\n        }\n        let paths = map[pos];\n        for (let target in paths) {\n            let v = paths[target];\n            if (event.length != 0) {\n                for (let i = 0; i < event.length; i++) {\n                    let e = event[i];\n                    if (e.path == 0) continue;\n                    if (e.value == 0) {\n                        v = 0;\n                    } else {\n                        v += e.value;\n                    }\n                    e.path--;\n                }\n            }\n            dps(target, [...road, target], value + v + value_, newEvent ? [...event, newEvent] : [...event]);\n        }\n    }\n    function calculateValue() {\n        let st = 0;\n        let road = [0];\n        let value = 0;\n        dps(st, road, value, []);\n    }\n\n    createPoint();\n    createMap();\n    createEvent();\n\n    // console.log(`\u8282\u70B9\u6570\u91CF:`, pointNumber);\n    // console.log(`\u6DF1\u5EA6:`, deepNumber);\n    // console.log(`\u8282\u70B9\u6DF1\u5EA6\u56FE:`, point);\n    // console.log(`\u5730\u56FE:`, map);\n    // console.log(`\u8282\u70B9\u4E8B\u4EF6:`, pointEvent);\n    // console.log(\n    //     \"\u4E8B\u4EF6\u8BF4\u660E:\\n type:0 \u4E3A\u83B7\u5F97\u6216\u5931\u53BB\u90E8\u5206\u70B9\u6570 value \u4E3A\u70B9\u6570\u7684\u5177\u4F53\u6570\u503C \\n type:1 \u4E3A\u63A5\u4E0B\u6765n\u6761\u8DEF,\u8D39\u7528\u589E\u52A0\u6216\u8005\u51CF\u5C11 value \u4E3A\u70B9\u6570\u7684\u5177\u4F53\u6570\u503C,\u5982\u679C\u4E3A0,\u5219\u4EE3\u8868\u63A5\u4E0B\u6765\u7684n\u6761\u8DEF\u514D\u8D39 path \u4E3A\u5BF9\u5E94\u7684n\u6761\u8DEF \\n type:2 \u4ECE\u5F53\u524D\u70B9\u79FB\u52A8\u5230\u522B\u5904 target\u4E3A\u79FB\u52A8\u7684\u76EE\u7684\u5730 \\n type:3 \u6E38\u620F\u5931\u8D25\"\n    // );\n\n    calculateValue();\n    const defaultValue = Math.round(minCause + (maxCause - minCause) * 0.1);\n\n    // console.log(`\u6700\u5C11\u8D39\u7528:`, minCause);\n    // console.log(`\u6700\u77ED\u8DEF\u5F84:`, minPath);\n    // console.log(`\u6700\u591A\u8D39\u7528:`, maxCause);\n    // console.log(`\u6700\u957F\u8DEF\u5F84:`, maxPath);\n    // console.log(`\u521D\u59CB\u8D39\u7528:`, defaultValue);\n    return { map, defaultValue, point, pointEvent, endPoint: pointNumber };\n}\n//   mapBuilder();\n", "import { mapBuilder } from \"./MapBuilder\";\n\nexport default class MapAction {\n    position = 0;\n    lastPoint = 0;\n    map: Record<number, Record<number, any>> = {};\n    pointEvent: Record<number, any> = [];\n    eventList: Array<any> = [];\n    eventFlag = {};\n    point: Array<number[]> = [];\n    endPoint = 0;\n    isFinish = false;\n    nextPoint: Array<number> = [];\n    constructor() {\n        const { map, defaultValue, point, pointEvent, endPoint } = mapBuilder();\n        this.lastPoint = defaultValue;\n        this.map = map;\n        this.point = point;\n        this.pointEvent = pointEvent;\n\n        this.endPoint = endPoint;\n        this.showRoad(this.position);\n    }\n    checkArrival = (position: number) => {\n        return this.nextPoint.includes(position);\n    }\n    showRoad = (position: number) => {\n        this.nextPoint = [];\n        const roadList: Record<number, any> = this.map[position];\n        for (let key in this.map[position]) {\n            this.nextPoint.push(parseInt(key));\n        }\n    }\n    meetEvent = (position: number) => {\n        let event = this.pointEvent[position];\n\n        if (event.type == 1) {\n            this.eventList.push(event);\n        }\n        if (event.type == 0) {\n            this.lastPoint += event.value;\n        }\n        if (event.type == 2) {\n            this.positionChange(event.target);\n        }\n    }\n    positionChange = (newPosition: number) => {\n\n        let value = this.map[this.position][newPosition];\n        console.log(value);\n        for (let i = 0; i < this.eventList.length; i++) {\n            let event = this.eventList[i];\n            if (event.path === 0) {\n                continue;\n            }\n            if (event.value == 0) {\n                value = 0;\n            } else {\n                value += event.value;\n            }\n            event.path--;\n        }\n        this.lastPoint -= value;\n        console.log('\u5269\u4F59\u70B9\u6570', this.lastPoint);\n        if (isNaN(this.lastPoint))console.log(JSON.stringify(this.eventList) , value);\n\n        if (this.lastPoint <= 0) {\n            console.log('\u6E38\u620F\u7ED3\u675F\uFF0C\u65C5\u9014\u5931\u8D25');\n            this.isFinish = true;\n            return;\n        }\n        this.position = newPosition;\n\n        if (this.position == this.endPoint) {\n            console.log('\u6E38\u620F\u7ED3\u675F\uFF0C\u987A\u5229\u901A\u5173');\n            this.isFinish = true;\n            return;\n        }\n\n        this.meetEvent(this.position);\n        this.showRoad(this.position);\n\n    }\n\n}", "import { Building } from \"./Building/Index\";\nimport Texture = Laya.Texture;\nimport MapAction from \"./MapAction\";\nimport { MyDialog } from \"./dialog\";\nconst { regClass, property } = Laya;\n\ninterface IPos {\n    x: number;\n    y: number;\n}\ninterface IRoadPoint extends IPos {\n    turn?: number; // \u7B2C\u51E0\u4E2A\u62D0\u5F2F\n    isTurn?: boolean; // \u5F53\u524D\u662F\u5426\u4E3A\u62D0\u5F2F\n    value?: number; // \u8DDD\u79BBstart\u548C\u8DDD\u79BBend\u76F8\u52A0\u7684\u6743\u91CD\uFF0C\u8D8A\u5C0F\u8D8A\u6B63\u786E\n}\ninterface IRoad {\n    cost: number;\n    points: IRoadPoint[];\n}\ninterface IBuilding extends IPos {\n    id: number;\n    sprite?: Building;\n    targets?: Record<number, IRoad>;\n}\ntype IMapPoint = IBuilding;\n\n@regClass('8e8acd19-9514-4a59-b19e-ea56fed60c71', '../src/ui/MapPanel.ts')\nexport class MapPanel extends Laya.Panel {\n    private padding: number = 0;\n    // \u7F51\u683C\u5217\u6570\n    private gridColumns: number = 0;\n    // \u7F51\u683C\u884C\u6570\n    private gridRows: number = 0;\n    // \u7F51\u683C\u5217\u5BBD\n    private gridColumnWidth: number = 40;\n    // \u7F51\u683C\u884C\u9AD8\n    private gridRowHeight: number = 40;\n    // \u5730\u56FE\u6570\u636E\n    public map: IMapPoint[][] = [];\n    // \u5EFA\u7B51\u7269\u6570\u636E\n    public buildingMapper: Record<number | string, IMapPoint> = {};\n    // \u539F\u59CB\u5730\u56FE\u6570\u636E\n    public mapInfo: MapAction = null;\n    // sprite\n    private roadSprite: Laya.Sprite = new Laya.Sprite();\n    private highLightRoadSprite: Laya.Sprite = new Laya.Sprite();\n    private buildingSprite: Laya.Sprite = new Laya.Sprite();\n    private characterSprite: Laya.Sprite = new Laya.Sprite();\n\n\n    constructor(width: number, height: number, padding: number = 0) {\n        super();\n        this.width = width;\n        this.height = height;\n        this.padding = padding;\n        this.initGrid();\n        this.addChild(this.roadSprite);\n        this.roadSprite.pos(0, 0);\n        this.addChild(this.highLightRoadSprite);\n        this.highLightRoadSprite.pos(0, 0);\n        this.addChild(this.buildingSprite);\n        this.buildingSprite.pos(0, 0);\n        this.addChild(this.characterSprite);\n        this.characterSprite.pos(0, 0);\n    }\n\n    initGrid(rowHeight = 40, columnWidth = 40) {\n        this.gridColumnWidth = columnWidth;\n        this.gridRowHeight = rowHeight;\n        this.gridRows = Math.floor((this.height - this.padding * 2) / this.gridRowHeight);\n        this.gridColumns = Math.floor((this.width - this.padding * 2) / this.gridColumnWidth);\n    }\n\n    generate(mapInfo: MapAction): void {\n        // 1. \u521D\u59CB\u5316\u6570\u636E\n        // if (mapInfo != null) {\n        //     this.mapInfo = mapInfo;\n        // } else {\n        //     this.mapInfo = new MapAction();\n        // }\n        this.mapInfo = new MapAction();\n\n        this.initMap();\n        // 2. \u7ED8\u5236\u5730\u56FE\n        this.drawMap();\n        this.highLightRoads(0);\n    }\n\n    initMap(): void {\n        // 1. \u9500\u6BC1\u5386\u53F2sprite\n        for (let source in this.buildingMapper) {\n            this.buildingMapper[source].sprite?.destroy(true);\n            this.buildingMapper[source].sprite = null;\n        }\n        // 2. \u521D\u59CB\u5316\u5730\u56FE\u6570\u636E\n        const { point: building, map: relation } = this.mapInfo;\n        this.buildingMapper = {};\n        this.map = [];\n        for (let i = 0; i < this.gridRows; i++) {\n            this.map.push(new Array(this.gridColumns).fill(null));\n        }\n        // 3. \u786E\u5B9Abuilding\u4F4D\u7F6E\uFF0C\u5C3D\u53EF\u80FD\u5145\u6EE1\u5730\u56FE(\u968F\u673A\u6027)\n        const firstBuilding = { id: 0, x: 0, y: 0 }\n        this.map[0][0] = firstBuilding;\n        this.buildingMapper[firstBuilding.id] = firstBuilding;\n\n        let nextX = 2;\n        for (let column = 1; column < building.length; column++) {\n            const curX = this.getRandom(nextX, this.gridColumns - (building.length - column - 1) * 2 - 1);\n\n            let nextY = 0;\n            for (let row = 0; row < building[column].length; row++) {\n                const curY = this.getRandom(nextY, this.gridRows - (building[column].length - row - 1) * 2 - 1);\n                const curBuilding = { id: building[column][row], x: curX, y: curY };\n                this.map[curY][curX] = curBuilding;\n                this.buildingMapper[curBuilding.id] = curBuilding;\n                nextY = curY + 2;\n            }\n            nextX = curX + 2;\n        }\n        // 4. \u786E\u5B9Aroad\u7ECF\u8FC7\u8282\u70B9\uFF0C\u786E\u4FDD\u8DEF\u5F84\u77ED\uFF0C\u62D0\u5F2F\u5C11\n        for (let source in relation) {\n            for (let target in relation[source]) {\n                if (!this.buildingMapper[source]) {\n                    continue;\n                }\n                if (!this.buildingMapper[source].targets) {\n                    this.buildingMapper[source].targets = {};\n                }\n                const points = this.getRoadPoints(this.buildingMapper[source], this.buildingMapper[target]);\n                if (points.length) {\n                    this.buildingMapper[source].targets[target] = {\n                        cost: parseInt(relation[source][target]),\n                        points\n                    };\n                }\n            }\n        }\n    }\n\n    drawMap() {\n        this.drawGround();\n        this.drawRoads();\n        this.drawBuildings();\n        this.drawCharacter();\n    }\n\n    drawGround() {\n        // \u6E05\u9664\u5386\u53F2\u75D5\u8FF9\n        this.graphics.clear();\n        // \u7EB9\u7406\u7ED8\u5236\n        const groundTexture: Texture = Texture.create(Laya.loader.getRes(\"resources/ground.png\"), 0, 0, 30, 30);\n        this.graphics.fillTexture(groundTexture, 0, 0, this.width, this.height);\n    }\n\n    drawRoads() {\n        // \u6E05\u9664\u5386\u53F2\u75D5\u8FF9\n        this.roadSprite.graphics.clear();\n        // \u8DEF\u5F84\u7ED8\u5236\n        for (let source in this.buildingMapper) {\n            this.drawRoadsForBuilding(this.roadSprite, this.buildingMapper[source], 'drak');\n        }\n    }\n\n    drawRoadsForBuilding(sprite: Laya.Sprite, building: IBuilding, type = 'light') {\n        if (!building?.targets) {\n            return;\n        }\n        const roads = Object.values(building.targets);\n        const roadParameters = roads.reduce((result, road) => {\n            const points = road.points;\n            const parameters = {\n                x: this.getXPos(points[0].x, 'center'),\n                y: this.getYPos(points[0].y, 'center'),\n                points: points.map(point => [this.getXDistance(point.x - points[0].x), this.getYDistance(point.y - points[0].y)]).flat()\n            };\n            sprite.graphics.drawLines(\n                parameters.x,\n                parameters.y,\n                parameters.points,\n                type === 'light' ? '#a1a1a1' : '#717171',\n                20\n            );\n            result.push(parameters);\n            return result;\n        }, []);\n        roadParameters.forEach((parameters) => {\n            sprite.graphics.drawLines(\n                parameters.x,\n                parameters.y,\n                parameters.points,\n                type === 'light' ? 'white' : '#dadada',\n                16\n            );\n        });\n        roadParameters.forEach((parameters) => {\n            sprite.graphics.drawLines(\n                parameters.x,\n                parameters.y,\n                parameters.points,\n                type === 'light' ? '#a1a1a1' : '#717171',\n                12\n            );\n        });\n    }\n\n    getStraightAngle(start: IRoadPoint, end: IRoadPoint): number {\n        if (end.x < start.x) {\n            return Math.PI * 3 / 2;\n        }\n        if (end.x > start.x) {\n            return Math.PI / 2;\n        }\n        if (end.y < start.y) {\n            return 0;\n        }\n        return Math.PI;\n    }\n    getTurnAngle(prev: IRoadPoint, current: IRoadPoint, next: IRoadPoint): number {\n        // \u4E00\u4E2A\u70B9\u5728\u4E0A\n        if (prev.y < current.y || next.y < current.y) {\n            // \u4E00\u4E2A\u70B9\u5728\u53F3\n            if (prev.x > current.x || next.x > current.x) {\n                return 0;\n            }\n            return Math.PI * 3 / 2;\n        } else {\n            // \u4E00\u4E2A\u70B9\u5728\u53F3\n            if (prev.x > current.x || next.x > current.x) {\n                return Math.PI / 2;\n            }\n            return Math.PI;\n        }\n    }\n\n    drawBuildings() {\n        // \u6E05\u9664\u5386\u53F2\u75D5\u8FF9\n        this.buildingSprite.graphics.clear();\n        this.buildingSprite.destroyChildren();\n        // \u5EFA\u7B51\u7269\u7ED8\u5236\n        for (let y = 0; y < this.map.length; y++) {\n            for (let x = 0; x < this.map[y].length; x++) {\n                if (this.map[y][x]?.id !== undefined) {\n                    const building = new Building(this.getXPos(x), this.getYPos(y), this.gridColumnWidth, this.gridRowHeight);\n                    this.buildingSprite.addChild(building);\n                    building.on('click', async () => {\n                        // const pop = new MyDialog('test');\n                        // pop.popup();\n                        if (this.mapInfo.isFinish) {\n                            console.log('Game Finish!')\n                            return;\n                        }\n                        console.log('heiheihei', this.mapInfo.position, this.map[y][x].id)\n                        if (this.mapInfo.checkArrival(this.map[y][x].id)) {\n                            let count = 0;\n                            const target = this.buildingMapper[this.mapInfo.position].targets[this.map[y][x].id];\n                            target.points.map(e => {\n                                var tween = Laya.Tween.to(this.characterSprite, { x: this.getXDistance(e.x), y: this.getYDistance(e.y) }, 200, null, null, count * 200);\n                                count++;\n                            })\n                            this.mapInfo.positionChange(this.map[y][x].id);\n                            await new Promise((resolve) => { setTimeout(() => resolve(0), target.points.length * 200) })\n                            this.highLightRoads(this.map[y][x].id)\n                            \n                        }\n                        if (this.mapInfo.isFinish) {\n                            console.log('Game Finish!')\n                        }\n                    })\n                    this.map[y][x].sprite = building;\n                }\n            }\n        }\n    }\n    drawCharacter() {\n        const carTexture: Texture = Texture.create(Laya.loader.getRes(\"resources/map/car.png\"), 0, 0, 330, 230);\n        this.characterSprite.graphics.drawTexture(carTexture, this.getXPos(0), this.getYPos(0), this.gridColumnWidth, this.gridRowHeight);\n    }\n    highLightRoads(id: number | string) {\n        // \u6E05\u9664\u5386\u53F2\u75D5\u8FF9\n        this.highLightRoadSprite.graphics.clear();\n        this.drawRoadsForBuilding(this.roadSprite, this.buildingMapper[id], 'light');\n    }\n\n    calcPointValue(start: IPos, end: IPos): number {\n        return Math.abs(start.x - end.x) + Math.abs(start.y - end.y);\n    }\n\n    getRoadPoints(start: IBuilding, end: IBuilding): IRoadPoint[] {\n        if (!start || !end) {\n            return [];\n        }\n        const directions = [[0, 1], [-1, 0], [0, -1], [1, 0]];\n        // \u8DEF\u5F84\u987A\u5E8F\n        const queue: IRoadPoint[][] = [[{ ...start, turn: 0, value: this.calcPointValue(start, end)}]];\n        // \u5F80\u4E0B\u67E5\u627E\uFF1A\u5E7F\u5EA6\u4F18\u5148\n        while (queue.length && (queue[0][0].x !== end.x || queue[0][0].y !== end.y)) {\n            // 1. \u5BFB\u627E\u4E0B\u4E00\u4E2A\u70B9\n            const curPoints = queue.shift();\n            const [curPoint, prevPoint] = curPoints;\n\n            const nextPoints = [];\n            for (let i = 0; i < directions.length; i++) {\n                const nextPoint: IRoadPoint = {\n                    x: curPoint.x + directions[i][0],\n                    y: curPoint.y + directions[i][1],\n                    turn: curPoint.turn || 0\n                };\n                // 1. \u5224\u65AD\u8282\u70B9\u662F\u5426\u6709\u6548\n                if (nextPoint.x < 0 || nextPoint.y < 0 ||\n                    nextPoint.x >= this.gridColumns || nextPoint.y >= this.gridRows ||\n                    curPoints.findIndex((point) => point.x === nextPoint.x && point.y === nextPoint.y) !== -1) {\n                    continue;\n                }\n                // 2. \u5224\u65AD\u8282\u70B9\u662F\u5426\u62D0\u5F2F\n                if (prevPoint) {\n                    if (new Set([prevPoint.x, curPoint.x, nextPoint.x]).size !== 1 &&\n                        new Set([prevPoint.y, curPoint.y, nextPoint.y]).size !== 1) {\n                        nextPoint.turn++;\n                        nextPoint.isTurn = true;\n                    }\n                }\n                // 3. \u5982\u679C\u662F\u969C\u788D\u7269\u4E14\u4E0D\u4E3A\u7EC8\u70B9\uFF0C\u8DF3\u8FC7\n                if (this.map[nextPoint.y][nextPoint.x] !== null && (nextPoint.x !== end.x || nextPoint.y !== end.y)) {\n                    continue;\n                }\n                // 4. \u8BA1\u7B97\u8282\u70B9\u7684cost\n                nextPoint.value = curPoints.length + this.calcPointValue(end, nextPoint);\n                nextPoints.push(nextPoint);\n            }\n            if (nextPoints.length) {\n                queue.unshift(...nextPoints.map((point) => [point, ...curPoints]));\n                queue.sort((a, b) => a[0].value === b[0].value ? a[0].turn - b[0].turn : a[0].value - b[0].value);\n            }\n        }\n        if (!queue.length) {\n            return [];\n        }\n        return queue[0].reverse();\n    }\n\n    getRandom(n: number, m: number): number {\n        return Math.floor(Math.random() * (m - n + 1) + n);\n    }\n\n    getXDistance(x: number) {\n        return x * this.gridColumnWidth;\n    }\n    getYDistance(y: number) {\n        return y * this.gridRowHeight;\n    }\n\n    getXPos(x: number, placement?: 'center') {\n        if (placement === 'center') {\n            return (x + 0.5) * this.gridColumnWidth + this.padding;\n        }\n        return x * this.gridColumnWidth + this.padding;\n    }\n\n    getYPos(y: number, placement?: 'center') {\n        if (placement === 'center') {\n            return (y + 0.5) * this.gridRowHeight + this.padding;\n        }\n        return y * this.gridRowHeight + this.padding;\n    }\n}", "export class LocalStorage {\n    static setItem(key: string, value: any) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    static getItem(key: string) {\n        const item = localStorage.getItem(key);\n        return item ? JSON.parse(item) : null;\n    }\n\n    static removeItem(key: string) {\n        localStorage.removeItem(key);\n    }\n\n    static clear() {\n        localStorage.clear();\n    }\n}\n\nexport let testID = \"test\";", "import { IndexBase } from \"./Index.generated\";\nimport { MapPanel } from \"./ui/MapPanel\";\nimport Event = Laya.Event;\nimport MapAction from \"./ui/MapAction\";\nimport { LocalStorage } from \"./storage/local_storage\";\n\nconst { regClass, property } = Laya;\n\n@regClass('f0297df7-2262-4d82-afb2-2d0f83a1613b', '../src/Index.ts')\nexport class Index extends IndexBase {\n    //declare owner : Laya.Sprite3D;\n    private map: MapPanel;\n    private lastMapInfo: MapAction;\n    private openid: string;\n\n    constructor() {\n        super();\n    }\n\n    /**\n     * \u7EC4\u4EF6\u88AB\u6FC0\u6D3B\u540E\u6267\u884C\uFF0C\u6B64\u65F6\u6240\u6709\u8282\u70B9\u548C\u7EC4\u4EF6\u5747\u5DF2\u521B\u5EFA\u5B8C\u6BD5\uFF0C\u6B64\u65B9\u6CD5\u53EA\u6267\u884C\u4E00\u6B21\n     */\n    //onAwake(): void {}\n\n    /**\n     * \u7EC4\u4EF6\u88AB\u542F\u7528\u540E\u6267\u884C\uFF0C\u4F8B\u5982\u8282\u70B9\u88AB\u6DFB\u52A0\u5230\u821E\u53F0\u540E\n     */\n    async onEnable(): Promise<void> {\n        console.log(\"onEnable\");\n    }\n\n    /**\n     * \u7EC4\u4EF6\u88AB\u7981\u7528\u65F6\u6267\u884C\uFF0C\u4F8B\u5982\u4ECE\u8282\u70B9\u4ECE\u821E\u53F0\u79FB\u9664\u540E\n     */\n    //onDisable(): void {}\n\n    /**\n     * \u7B2C\u4E00\u6B21\u6267\u884Cupdate\u4E4B\u524D\u6267\u884C\uFF0C\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\n     */\n    //onStart(): void {}\n\n    /**\n     * \u624B\u52A8\u8C03\u7528\u8282\u70B9\u9500\u6BC1\u65F6\u6267\u884C\n     */\n    onDestroy(): void {\n        LocalStorage.setItem(this.openid, this.map.mapInfo);\n    }\n\n    /**\n     * \u6BCF\u5E27\u66F4\u65B0\u65F6\u6267\u884C\uFF0C\u5C3D\u91CF\u4E0D\u8981\u5728\u8FD9\u91CC\u5199\u5927\u5FAA\u73AF\u903B\u8F91\u6216\u8005\u4F7F\u7528getComponent\u65B9\u6CD5\n     */\n    //onUpdate(): void {}\n\n    /**\n     * \u6BCF\u5E27\u66F4\u65B0\u65F6\u6267\u884C\uFF0C\u5728update\u4E4B\u540E\u6267\u884C\uFF0C\u5C3D\u91CF\u4E0D\u8981\u5728\u8FD9\u91CC\u5199\u5927\u5FAA\u73AF\u903B\u8F91\u6216\u8005\u4F7F\u7528getComponent\u65B9\u6CD5\n     */\n    //onLateUpdate(): void {}\n\n    /**\n     * \u9F20\u6807\u70B9\u51FB\u540E\u6267\u884C\u3002\u4E0E\u4EA4\u4E92\u76F8\u5173\u7684\u8FD8\u6709onMouseDown\u7B49\u5341\u591A\u4E2A\u51FD\u6570\uFF0C\u5177\u4F53\u8BF7\u53C2\u9605\u6587\u6863\u3002\n     */\n    //onMouseClick(): void {}\n\n    // \u5B9A\u65F6\u5668\u56DE\u8C03\u51FD\u6570\n    // onTimer() {\n    //     console.log(\"\u5B9A\u65F6\u5668\u89E6\u53D1\");\n    //     LocalStorage.setItem(this.openid, this.map.mapInfo);\n    // }\n\n    // \u65B0\u573A\u666F\u52A0\u8F7D\u5B8C\u6210\u540E\u6267\u884C\n    onOpened(param: any) {\n        this.openid = param[\"openid\"]\n        if (this.openid != null) {\n            // \u8BFB\u53D6\u4E0A\u6B21\u8BB0\u5F55\n            this.lastMapInfo = LocalStorage.getItem(this.openid) as MapAction;\n        }\n        console.log(\"onOpened: \" + this.openid + \" \" + this.lastMapInfo);\n        // 1. \u521D\u59CB\u5316\u5730\u56FE\n        this.map = new MapPanel(1136, 640, 10);\n        this.map.generate(this.lastMapInfo);\n        this.addChild(this.map);\n        // 2. \u9F20\u6807\u4EA4\u4E92\n        // for (let id in this.map.buildingMapper) {\n        //     this.map.buildingMapper[id].sprite.on(Event.CLICK, () => {\n        //         this.map.highLightRoads(id);\n        //     })\n        // }\n        // Laya.timer.loop(1000, this, this.onTimer);\n    }\n}", "/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */\n\n\n/**\n * Loading.ls\n */\nexport class LoadingBase extends Laya.Scene {\n    public progress: Laya.ProgressBar;\n}\n\n", "import 'miniprogram-api-typings';\n\n// \u5224\u65AD\u7528\u6237\u662F\u5426\u6388\u6743\u767B\u5F55\u5C0F\u7A0B\u5E8F\nfunction checkUserAuth(): Promise<boolean> {\n    return new Promise((resolve, reject) => {\n        wx.getSetting({\n            success: (res) => {\n                if (res.authSetting['scope.userInfo']) {\n                    // \u5DF2\u6388\u6743\uFF0C\u8FD4\u56DE true\n                    resolve(true);\n                } else {\n                    // \u672A\u6388\u6743\uFF0C\u8FD4\u56DE false\n                    resolve(false);\n                }\n            },\n            fail: (error) => {\n                reject(error);\n            },\n        });\n    });\n}\n\n// \u8BF7\u6C42\u7528\u6237\u6388\u6743\nfunction requestUserAuth(): Promise<WechatMiniprogram.UserInfo> {\n    return new Promise((resolve, reject) => {\n        wx.getUserInfo({\n            withCredentials: true,\n            success: (res) => {\n                resolve(res.userInfo);\n            },\n            fail: (error) => {\n                reject(error);\n            },\n        });\n    });\n}\n\n// \u8FDB\u884C\u5FAE\u4FE1\u767B\u5F55\nfunction wxLogin(): Promise<WechatMiniprogram.LoginSuccessCallbackResult> {\n    return new Promise((resolve, reject) => {\n        wx.login({\n            success: (res) => {\n                resolve(res);\n            },\n            fail: (error) => {\n                reject(error);\n            },\n        });\n    });\n}\n\n// \u8C03\u7528\u4EE5\u4E0A\u4E09\u4E2A\u51FD\u6570\u5B9E\u73B0\u5B8C\u6574\u7684\u767B\u5F55\u6D41\u7A0B\nexport async function login(): Promise<string> {\n    try {\n        const isAuth = await checkUserAuth();\n        if (!isAuth) {\n            await requestUserAuth();\n        }\n        const wxLoginRes = await wxLogin();\n        // \u5728\u8FD9\u91CC\u8FDB\u884C\u767B\u5F55\u6210\u529F\u540E\u7684\u540E\u7EED\u64CD\u4F5C\n        console.log(\"wxLoginRes: \" + wxLoginRes)\n        if (wxLoginRes.code) {\n            const code2SessionRes = await wxCode2Session(wxLoginRes.code);\n            console.log(\"code2SessionRes: \" + code2SessionRes)\n            return code2SessionRes\n        }\n    } catch (error) {\n        console.log(\"login err: \" + error)\n    }\n    \n    return null\n}\n\nasync function wxCode2Session(code: string): Promise<any> {\n    return new Promise((resolve, reject) => {\n        // \u767B\u5F55\u6210\u529F\uFF0C\u83B7\u53D6\u7528\u6237open_id\n        wx.request({\n            url: 'https://api.weixin.qq.com/sns/jscode2session',\n            data: {\n                appid: 'your_appid',\n                secret: 'your_secret',\n                js_code: code,\n                grant_type: 'authorization_code'\n            },\n            success(res) {\n                console.log(\"resp.data: \" + res.data);\n                resolve(res)\n            },\n            fail(error) {\n                console.log('\u5FAE\u4FE1\u767B\u5F55\u5931\u8D25');\n                reject(error)\n            }\n        });\n    });\n}\n\n", "const { regClass } = Laya;\nimport { LoadingBase } from \"./Loading.generated\";\nimport { LocalStorage } from \"./storage/local_storage\";\nimport { login } from \"./login/wx_login\";\n\nconst resources = [\n    \"resources/ground.png\",\n    \"resources/map/building.png\",\n    \"resources/map/car.png\"\n];\n  \n@regClass('ce1c8aad-836c-4269-88cd-2c0a2d843f4d', '../src/Loading.ts')\nexport class Loading extends LoadingBase {\n    onAwake(): void {\n        Laya.loader.load(\n            //\u52A0\u8F7D\u9996\u5C4F\u56FE\u7247\n            [\n                \"atlas/comp/progress.png\",\n                \"atlas/comp/progress$bar.png\"\n            ]\n        ).then(() => {\n            Laya.loader.load(resources, null, Laya.Handler.create(this, this.onLoading, null, false)).then(async () => {\n                // \u52A0\u8F7D\u5B8C\u6210\u540E\uFF0C\u5904\u7406\u903B\u8F91\n                // 1. \u8BFB\u53D6\u5F53\u524D\u7528\u6237\n                let openid = LocalStorage.getItem(\"game_traveler_user_id\");\n                if (openid == null) {\n                    // 2. \u5C1D\u8BD5\u5FAE\u4FE1\u767B\u5F55\n                    console.log(\"openid\u4E3A\u7A7A, \u5C1D\u8BD5\u5FAE\u4FE1\u767B\u5F55\");\n                    openid = await login();\n                    console.log(\"openid: \" + openid);\n                }\n                \n                this.progress.value = 0.98;\n                //\u9884\u52A0\u8F7D\u7684\u4E1C\u897F\u592A\u5C11\uFF0C\u4E3A\u4E86\u672C\u5730\u770B\u6548\u679C\u5EF6\u8FDF\u4E00\u79D2\uFF0C\u771F\u5B9E\u9879\u76EE\u4E0D\u9700\u8981\u5EF6\u8FDF\n                Laya.timer.once(1000, this, () => {\n                    //\u8DF3\u8F6C\u5230\u5165\u53E3\u573A\u666F\n                    Laya.Scene.open(\"scenes/Index.ls\", true, {\"openid\": openid}); //\u4E0D\u8981\u4F7F\u7528Laya.Scene.open(\"./Scenes/Index.ls\");\n                });\n            });\n            // \u4FA6\u542C\u52A0\u8F7D\u5931\u8D25\n            Laya.loader.on(Laya.Event.ERROR, this, this.onError);\n        });\n    }\n\n    /**\n   * \u5F53\u62A5\u9519\u65F6\u6253\u5370\u9519\u8BEF\n   * @param err \u62A5\u9519\u4FE1\u606F\n   */\n    onError(err: string): void {\n        console.log(\"\u52A0\u8F7D\u5931\u8D25: \" + err);\n    }\n\n    /**\n     * \u52A0\u8F7D\u65F6\u4FA6\u542C\n     */\n    onLoading(progress: number): void {\n        //\u63A5\u8FD1\u5B8C\u6210\u52A0\u8F7D\u65F6\uFF0C\u8BA9\u663E\u793A\u8FDB\u5EA6\u6BD4\u5B9E\u9645\u8FDB\u5EA6\u6162\u4E00\u70B9\uFF0C\u8FD9\u662F\u4E3A\u6253\u5F00\u573A\u666F\u65F6\u7684\u81EA\u52A8\u52A0\u8F7D\u9884\u7559\uFF0C\u5C24\u5176\u662F\u8981\u6253\u5F00\u7684\u573A\u666F\u8D44\u6E90\u591A\uFF0C\u5E76\u6CA1\u6709\u5B8C\u5168\u653E\u5230\u9884\u52A0\u8F7D\u4E2D\uFF0C\u8FD8\u9700\u8981\u518D\u81EA\u52A8\u52A0\u8F7D\u4E00\u90E8\u5206\u65F6\u3002\n        if (progress > 0.92) this.progress.value = 0.95;\n        else this.progress.value = progress;\n        if (Laya.Browser.onMiniGame) {\n            Laya.Browser.window.wx.config({\n                debug: false, // \u662F\u5426\u5F00\u542F\u8C03\u8BD5\u6A21\u5F0F\n                appId: 'your_app_id', // \u516C\u4F17\u53F7\u7684\u552F\u4E00\u6807\u8BC6\n                timestamp: 'your_timestamp', // \u751F\u6210\u7B7E\u540D\u7684\u65F6\u95F4\u6233\n                nonceStr: 'your_nonce_str', // \u751F\u6210\u7B7E\u540D\u7684\u968F\u673A\u4E32\n                signature: 'your_signature', // \u7B7E\u540D\n                jsApiList: ['your_js_api_list'], // \u9700\u8981\u4F7F\u7528\u7684JS\u63A5\u53E3\u5217\u8868\n            });\n        }\n              \n    }\n}"],
  "mappings": "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",
  "names": ["start", "Texture", "regClass", "property", "regClass", "property", "regClass"]
}
